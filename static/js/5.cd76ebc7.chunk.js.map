{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/errorMessage.js","services/MarvelService.js","hooks/http.hooks.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","useMarvelService","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","name","getCharacter","id","getAllComics","_transformComics","getComic","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoading","setNewItemLoading","setOffset","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","item","i","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","ComicsPage"],"mappings":"iGAAe,UAA0B,kC,OCW1BA,IATM,WACpB,OACC,qBAAKC,MAAO,CACXC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAC1CC,UAAW,UAAWC,OAAQ,UAC5BC,IAAKC,EAAKC,IAAI,Y,yECmEJC,IAtEU,WAExB,MCHsB,WACtB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KA0BA,MAAO,CAAEH,UAASI,QAxBFC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,CAAE,eAAgB,oBAEhGT,GAAW,GAFgB,kBAKHU,MAAML,EAAK,CAAEE,SAAQC,OAAMC,YALxB,WAKpBE,EALoB,QAOZC,GAPY,uBAQnB,IAAIC,MAAJ,0BAA6BR,EAA7B,qBAA6CM,EAASG,SARnC,yBAWPH,EAASI,OAXF,eAWpBC,EAXoB,OAa1BhB,GAAW,GAbe,kBAcnBgB,GAdmB,wCAgB1BhB,GAAW,GACXE,EAAS,KAAEe,SAjBe,+DAAD,sDAoBxB,IAIwBhB,QAAOiB,WAFfd,uBAAY,kBAAMF,EAAS,QAAO,KDvBLiB,GAAxCpB,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,QAASF,EAA1B,EAA0BA,MAAOiB,EAAjC,EAAiCA,WAC3BE,EAAW,4CACXC,EAAU,0CAIVC,EAAgB,uCAAG,0CAAAhB,EAAA,6DAAOiB,EAAP,+BAHL,IAGK,SACNpB,EAAQ,GAAD,OAAIiB,EAAJ,qCAAyCG,EAAzC,YAAmDF,IADpD,cAClBG,EADkB,yBAEjBA,EAAIR,KAAKS,QAAQC,IAAIC,IAFJ,2CAAH,qDAMhBC,EAAkB,uCAAG,WAAOC,GAAP,eAAAvB,EAAA,sEACRH,EAAQ,GAAD,OAAIiB,EAAJ,2BAA+BS,EAA/B,YAAuCR,IADtC,cACpBG,EADoB,yBAEnBA,EAAIR,KAAKS,QAAQC,IAAIC,IAFF,2CAAH,sDAMlBG,EAAY,uCAAG,WAAOC,GAAP,eAAAzB,EAAA,sEACFH,EAAQ,GAAD,OAAIiB,EAAJ,sBAA0BW,EAA1B,YAAgCV,IADrC,cACdG,EADc,yBAEbG,EAAoBH,EAAIR,KAAKS,QAAQ,KAFxB,2CAAH,sDAKZO,EAAY,uCAAG,0CAAA1B,EAAA,6DAAOiB,EAAP,+BAAgB,EAAhB,SACFpB,EAAQ,GAAD,OACrBiB,EADqB,qDACgCG,EADhC,YAC0CF,IAF/C,cACdG,EADc,yBAIbA,EAAIR,KAAKS,QAAQC,IAAIO,IAJR,2CAAH,qDAOZC,EAAQ,uCAAG,WAAOH,GAAP,eAAAzB,EAAA,sEACEH,EAAQ,GAAD,OAAIiB,EAAJ,kBAAsBW,EAAtB,YAA4BV,IADrC,cACVG,EADU,yBAETS,EAAiBT,EAAIR,KAAKS,QAAQ,KAFzB,2CAAH,sDAMRE,EAAsB,SAACQ,GAE5B,MAAO,CACNJ,GAAII,EAAKJ,GACTF,KAAMM,EAAKN,KACXO,YAAaD,EAAKC,YAAL,UAAsBD,EAAKC,YAAYC,MAAM,EAAG,KAAhD,OAA4D,6CACzEC,UAAWH,EAAKG,UAAUC,KAAO,IAAMJ,EAAKG,UAAUE,UACtDC,SAAUN,EAAKO,KAAK,GAAGrC,IACvBsC,KAAMR,EAAKO,KAAK,GAAGrC,IACnBuC,OAAQT,EAAKS,OAAOC,QAKhBZ,EAAmB,SAACW,GAAY,IAAD,EACpC,MAAO,CACNb,GAAIa,EAAOb,GACXe,MAAOF,EAAOE,MACdV,YAAaQ,EAAOR,aAAe,0BACnCW,UAAWH,EAAOG,UAAP,UAAsBH,EAAOG,UAA7B,UAAiD,2CAC5DT,UAAWM,EAAON,UAAUC,KAAO,IAAMK,EAAON,UAAUE,UAC1DQ,UAAU,UAAAJ,EAAOK,YAAY,UAAnB,eAAuBD,WAAY,QAC7CE,MAAON,EAAOO,OAAO,GAAGD,MAAjB,UAA4BN,EAAOO,OAAO,GAAGD,MAA7C,KAAwD,kBAIjE,MAAO,CAAEnD,UAASE,QAAOqB,mBAAkBM,qBAAoBE,eAAcZ,aAAYgB,WAAUF,kB,+DEpErF,MAA0B,qCCA1B,MAA0B,0C,OCqB1BoB,IAjBG,WACd,OACI,sBAAKC,UAAU,cAAf,UACI,qBAAK3D,IAAK4D,EAAU1D,IAAI,aACxB,sBAAKyD,UAAU,mBAAf,mCAC0B,uBAD1B,iBAIA,qBAAKA,UAAU,uBAAf,gDAIA,qBAAKA,UAAU,mBAAmB3D,IAAK6D,EAAc3D,IAAI,uB,4ICkEtD4D,EA1EI,WAEf,MAAoC1D,mBAAS,IAA7C,mBAAO2D,EAAP,KAAmBC,EAAnB,KACA,EAA4C5D,oBAAS,GAArD,mBAAO6D,EAAP,KAAuBC,EAAvB,KACA,EAA4B9D,mBAAS,GAArC,mBAAOyB,EAAP,KAAesC,EAAf,KACA,EAAsC/D,oBAAS,GAA/C,mBAAOgE,EAAP,KAAoBC,EAApB,KAEA,EAAyClE,cAAjCE,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAO+B,EAAxB,EAAwBA,aAExBgC,qBAAU,WACNC,EAAU1C,GAAQ,KACnB,IAEH,IAAM0C,EAAY,SAAC1C,EAAQ2C,GACbN,GAAVM,GACAlC,EAAaT,GACR4C,KAAKC,IAGRA,EAAqB,SAACC,GAExB,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACvBD,GAAQ,GAGZZ,EAAc,GAAD,mBAAKD,GAAL,YAAoBY,KACjCT,GAAkB,GAClBC,GAAU,SAAAtC,GAAM,OAAIA,EAAS,KAC7BwC,GAAe,SAAAD,GAAW,OAAIQ,MAwBlC,IAAMzB,EArBN,SAAqB2B,GACjB,IAAM3B,EAAQ2B,EAAI9C,KAAI,SAAC+C,EAAMC,GACzB,OACI,oBAAIrB,UAAU,eAAd,SACI,eAAC,IAAD,CAAMsB,GAAE,kBAAaF,EAAK1C,IAA1B,UACI,qBAAKrC,IAAK+E,EAAKnC,UAAW1C,IAAK6E,EAAK3B,MAAOO,UAAU,qBACrD,qBAAKA,UAAU,oBAAf,SAAoCoB,EAAK3B,QACzC,qBAAKO,UAAU,qBAAf,SAAqCoB,EAAKvB,YAJhBwB,MAU1C,OACI,oBAAIrB,UAAU,eAAd,SACKR,IAMC+B,CAAYnB,GAEpBoB,EAAe5E,EAAQ,cAAC,IAAD,IAAmB,KAC1C6E,EAAU/E,IAAY4D,EAAiB,cAACoB,EAAA,EAAD,IAAc,KAE3D,OACI,sBAAK1B,UAAU,eAAf,UACKwB,EACAC,EACAjC,EACD,wBACImC,SAAUrB,EACVvE,MAAO,CAAE,QAAW0E,EAAc,OAAS,SAC3CT,UAAU,mCACV4B,QAAS,kBAAMhB,EAAU1C,IAJ7B,SAKI,qBAAK8B,UAAU,QAAf,6BChED6B,UATI,WAClB,OACC,qCACC,cAAC9B,EAAA,EAAD,IACA,cAAC,EAAD","file":"static/js/5.cd76ebc7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n\treturn (\r\n\t\t<img style={{\r\n\t\t\tdisplay: 'block', width: \"250px\", height: \"250px\",\r\n\t\t\tobjectFit: 'contain', margin: \"0 auto\"\r\n\t\t}} src={img} alt='Error' />\r\n\t)\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hooks\";\r\n\r\n\r\n\r\nconst useMarvelService = () => {\r\n\r\n\tconst { loading, request, error, clearError } = useHttp();\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=25c8163b746d2306e7d7474905acc656';\r\n\tconst _baseOffset = 210;\r\n\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t}\r\n\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t};\r\n\t};\r\n\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} pages` : \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n\treturn { loading, error, getAllCharacters, getCharacterByName, getCharacter, clearError, getComic, getAllComics };\r\n\r\n\r\n\r\n};\r\n\r\nexport default useMarvelService;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\r\n\t\tsetLoading(true);\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers });\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tsetLoading(false);\r\n\t\t\treturn data;\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false);\r\n\t\t\tsetError(e.message);\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() => setError(null), []);\r\n\r\n\treturn { loading, request, error, clearError }\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\" />\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br />\r\n                Stay tuned!\r\n            </div>\r\n            <div className=\"app__banner-text-row\">\r\n                New comics every week!\r\n                Stay tuned!\r\n            </div>\r\n            <img className=\"app__banner-logo\" src={avengersLogo} alt=\"Avengers logo\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../spinner/Spinner.js';\r\nimport ErrorMessage from '../errorMessage/errorMessage.js';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './comicsList.scss';\r\n\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const { loading, error, getAllComics } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnded(comicsEnded => ended);\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className='comics__item' key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\r\n                        <div className='comics__item-name'>{item.title}</div>\r\n                        <div className='comics__item-price'>{item.price}</div>\r\n                    </Link>\r\n                </li >\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n\r\n    const items = renderItems(comicsList);\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className='comics__list'>\r\n            {errorMessage}\r\n            {spinner}\r\n            {items}\r\n            <button\r\n                disabled={newItemLoading}\r\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\r\n                className='button button__main button__long'\r\n                onClick={() => onRequest(offset)}>\r\n                <div className='inner'>load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList; ","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage;"],"sourceRoot":""}